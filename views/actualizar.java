/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package aplicacionamigos.models.views;

import aplicacionamigos.models.Amigo;
import aplicacionamigos.models.gestorAmigos;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * El usuario puede actualizar un contacto registrado de la tabla
 * 
 * @author Sofia Rudas
 * @version 1.0.0
 * @since 26032025
 */
public class actualizar extends javax.swing.JDialog {

    private gestorAmigos gestor;
    private mostrarContactos Ventana;
    private Amigo contactoSeleccionado;
    private mostrarContactos mostrarContactos; 
    
    public actualizar(java.awt.Frame parent, boolean modal, gestorAmigos gestor, mostrarContactos ventana, Amigo contactoSeleccionado) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.gestor = gestor;
        this.Ventana = ventana;
        this.contactoSeleccionado = contactoSeleccionado;
        this.mostrarContactos = mostrarContactos;
        
        if (contactoSeleccionado != null) {
            txtNombre.setText(contactoSeleccionado.getNombres());
            txtTelefono.setText(contactoSeleccionado.getTelefono());
            txtCorreo.setText(contactoSeleccionado.getCorreoElectronico());
        }
        
        try {
        // Intenta cargar usando diferentes métodos
        URL imageUrl = getClass().getResource("images/principal.png");
        if (imageUrl == null) {
            imageUrl = getClass().getResource("/images/principal.png");
        }
        if (imageUrl == null) {
            imageUrl = getClass().getResource("/aplicacionamigos/models/images/principal.png");
        }
        
        if (imageUrl != null) {
            this.setIconImage(new ImageIcon(imageUrl).getImage());
        } else {
            System.err.println("No se pudo encontrar el archivo de imagen");
        }
    } catch (Exception e) {
        System.err.println("Error al cargar el ícono: " + e.getMessage());
        e.printStackTrace();
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Titulo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        Autor = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        Autor1 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(156, 194, 135));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actualizar Contacto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        Titulo.setBackground(new java.awt.Color(195, 225, 179));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Nombre:");

        txtTelefono.setBackground(new java.awt.Color(204, 204, 204));

        Autor.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Autor.setForeground(new java.awt.Color(0, 0, 0));
        Autor.setText("Telefono:");

        txtNombre.setBackground(new java.awt.Color(204, 204, 204));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnActualizar.setText("Actualizar Contacto");
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        volver.setBackground(new java.awt.Color(204, 204, 204));
        volver.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        volver.setForeground(new java.awt.Color(0, 0, 0));
        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        Autor1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Autor1.setForeground(new java.awt.Color(0, 0, 0));
        Autor1.setText("Correo:");

        txtCorreo.setBackground(new java.awt.Color(204, 204, 204));
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TituloLayout = new javax.swing.GroupLayout(Titulo);
        Titulo.setLayout(TituloLayout);
        TituloLayout.setHorizontalGroup(
            TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TituloLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Autor)
                    .addComponent(jLabel6)
                    .addComponent(Autor1))
                .addGap(28, 28, 28)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txtTelefono)
                    .addComponent(txtCorreo))
                .addContainerGap(218, Short.MAX_VALUE))
            .addGroup(TituloLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnActualizar)
                .addGap(106, 106, 106)
                .addComponent(volver)
                .addGap(175, 175, 175))
        );
        TituloLayout.setVerticalGroup(
            TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TituloLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Autor)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Autor1)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja la accio de presionar Enter en el campo de texto del nombre
     *
     * @param evt - Evento de accion del campo de texto
     */
    
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

     /**
     * Permite actualizar el contacto que el usuario elija de la tabla
     *
     * @param evt - Evento de clic del mouse
     */
    
    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
        actualizarContacto();
    }//GEN-LAST:event_btnActualizarMouseClicked

    /**
     * Maneja el evento de accion del boton de actualizar contacto
     * 
     * @param evt Evento de accion del boton
     */
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarContacto();
    }//GEN-LAST:event_btnActualizarActionPerformed

     /**
     * Cierra la ventana actual y regresa a la ventana principal
     *
     * @param evt - Evento de accion del boton
     */
    
    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * Maneja la accion de presionar Enter en el campo de texto del correo
     *
     * @param evt - Evento de accion del campo de texto
     */
    
    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed
    
    /**
     * Actualiza la informacion de un contacto seleccionado
     *
     * @exception IllegalArgumentException - Si el contacto original no se encuentra en la lista
     * @exception IllegalStateException - Si el contacto no puede ser actualizado
     * @exception Exception - Para cualquier otro error durante la actualizacion
     */
    
    private void actualizarContacto() {
    String nuevoNombre = this.txtNombre.getText().trim();
    String nuevoTelefono = this.txtTelefono.getText().trim();
    String nuevoCorreo = this.txtCorreo.getText().trim();
    
    // Validación de campos
    if (nuevoNombre.isEmpty() || nuevoTelefono.isEmpty() || nuevoCorreo.isEmpty()) {
        JOptionPane.showMessageDialog(
            this,
            "Por favor, complete todos los campos",
            "Error de validación",
            JOptionPane.WARNING_MESSAGE
        );
        return;
    }
    
    try {
        // Crear un nuevo objeto Amigo con la información actualizada
        Amigo contactoActualizado = new Amigo(nuevoNombre, nuevoTelefono, nuevoCorreo);
        
        // Obtener el correo original del contacto seleccionado
        String correoOriginal = contactoSeleccionado.getCorreoElectronico();
        
        // Actualizar en el gestor de amigos
        gestor.actualizarContacto(correoOriginal, contactoActualizado);
        
        JOptionPane.showMessageDialog(
            this,
            "Contacto actualizado correctamente",
            "Éxito",
            JOptionPane.INFORMATION_MESSAGE
        );
        
        // Actualizar la tabla de contactos
        if (this.mostrarContactos != null) {
            this.mostrarContactos.cargarContactosTabla();
        }
        
        this.dispose();
        
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(
            this,
            "No se encontró el contacto original: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE
        );
    } catch (IllegalStateException e) {
        JOptionPane.showMessageDialog(
            this,
            "No se puede actualizar el contacto: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE
        );
    } catch (Exception e) {
        JOptionPane.showMessageDialog(
            this,
            "Error al actualizar el contacto: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE
        );
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Autor;
    private javax.swing.JLabel Autor1;
    private javax.swing.JPanel Titulo;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
